# -*- coding: utf-8 -*-
"""cnn_update_data_backend.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z0XgtEBzYqeiL-XecLx24M8scCvUFmD9
"""

def update_megawatts(csv_file):

    return data_updater(csv_file, 'megawatts')

def update_festival(csv_file):

    return data_updater(csv_file, 'festival')

def data_updater(csv_file, data_kind):

    import pandas as pd
    import datetime
    import pytz
    from django.contrib import messages

    if data_kind == 'megawatts':
        date_format = 'datetime'

    if data_kind == 'festival':
        date_format = 'date'

    df = pd.read_csv('basic/data/{}.csv'.format(data_kind))
    print(df)

    new_data = pd.read_csv(csv_file)
    print(new_data)
    new_data[date_format] = pd.to_datetime(new_data[date_format])
    print(new_data)

    loss = 0
    for item in new_data.columns:
      if  item not in new_data.columns:
        loss += 1
    if loss !=0 :
      messages.error(request, 'Error: update file in drive should have same columns as in existing data')

    df[date_format] = pd.to_datetime(df[date_format])

    for dt in new_data[date_format]:
      if (df[date_format] == dt).sum() == 0:
        df = pd.concat([df, new_data.loc[new_data[date_format] == dt]], axis=0, sort=True)
      else:
        df.iloc[df.loc[df[date_format] == dt].index[0], 1] = new_data.set_index(date_format, drop=True).loc[dt][0]

    df = df.sort_values(date_format)
    df = df.reset_index(drop=True)

    local_timezone = pytz.timezone('Asia/Kolkata')
    utc_time = datetime.datetime.now()
    local_time = utc_time.astimezone(local_timezone).strftime('%d%b%l:%M%p')

    df.to_csv('basic/data/{}.csv'.format(data_kind), index=False)
